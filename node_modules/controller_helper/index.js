exports.init = function(){
	global.respond = function(accept,cbInfos){
		if (accept.indexOf('application/xml')+1 || accept.indexOf('text/xml')+1) {
			wants = 'xml';
		}
		if (accept.indexOf('application/html')+1 || accept.indexOf('text/html')+1 || accept.indexOf('*/*') + 1) {
			wants = 'html';
		};
		if (accept.indexOf('application/javascript')+1 || accept.indexOf('text/javascript') + 1) {
			wants = 'script';
		};
		if (accept.indexOf('application/json')+1 || accept.indexOf('text/json')+1) {
			wants = 'json';
		};
		cbInfos[wants].call();
	}
	// global.filter = function(obj,options){
	// 		if (!options) return obj;
	// 		if (options.before) {
	// 			return _filter('before',obj,options.before);
	// 		};
	// 		if (options.after) {
	// 			return _filter('after',obj,options.after)
	// 		};
	// 	}
	// 	function _filter(position,obj,options){
	// 		var opt = options || {},
	// 		only = opt.only || [],
	// 		except = opt.except || [],
	// 		combineFunction = function(func1,func2){
	// 			var fun = func2.toString(),
	// 			r = fun.match(/^function\s*\((.*?)\)\s*\{([\s\S]*)\}$/m),
	// 			params = r[1].replace(/\s/g,'').split(','),
	// 			body = r[2];
	// 			if (position == 'before') {
	// 				console.log(func1+'('+params.join(',')+');'+body);
	// 				return Function.apply(global,params.concat(func1+'('+params.join(',')+');'+body))
	// 			}else{
	// 				return Function.apply(global,params.concat(body + ';' +func1+'('+params.join(',')+');'))
	// 			}
	// 		};
	// 		if (only.length && except.length) {
	// 			except = [];
	// 			console.log('warning:\'only\' and \'except\' can\'t be both exist in beforFilter,\'except\' will be ignored');
	// 		};
	// 		if (!options || (!options.only && !options.except)) {
	// 			for(var i in obj){
	// 				if (obj[i] instanceof Function) {
	// 					obj[i] = combineFunction(options.func,obj[i]);
	// 				};
	// 			}
	// 		}else if(only.length){
	// 			for (var i=0; i < only.length; i++) {
	// 				var m = only[i];
	// 				if (obj[m] && (obj[m] instanceof Function)) {
	// 					obj[m] = combineFunction(options.func,obj[m]);
	// 				};
	// 			};
	// 		}else{
	// 			for(var i in obj){
	// 				if (except.indexOf(i)+1 && obj[i] instanceof Function) {
	// 					obj[i] = combineFunction(options.func,obj[i]);
	// 				};
	// 			}
	// 		}
	// 		return obj;
	// 	}
	
}
