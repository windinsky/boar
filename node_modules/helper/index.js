global.sha1 = function(str){
	var crypto = require('crypto');
	var shasum = crypto.createHash('sha1');
	shasum.update(str);
	return shasum.digest('hex');
}
global.checkSession = function(request,response){
	if (!request.session.user_id) {
		request.session.url = this.url;
		response.redirect('/sessions/new');
		return false;
	}
	return true;
}

global.DateUtils = {
	format: function(date,format){
		if (!date || !date.constructor) {
			return 'Invalid Date';
		};
		if (date.constructor == String) {
			date = new Date(date);
			if (date.toString() == 'Invalid Date') {
				return 'Invalid Date';
			}
		};
		if (date.constructor == Date) {
			return (format || '%y/%m/%d %h:%min:%s').replace(/\%y/g,date.getFullYear()).replace(/\%min/g,date.getMinutes()).replace(/\%d/g,date.getDate()).replace(/\%h/g,date.getHours()).replace(/\%ms/g,date.getMilliseconds()).replace(/\%m/g,date.getMonth()+1).replace(/\%s/g,date.getSeconds()).replace(/\%day/g,date.getDay());
		}else{
			return 'Invalid Date';
		}
	}
}